######################################################
#                                  _              _  #
#  _ __   __ _ _ __ ___   ___  ___| |__   ___  __| | # 
# | '_ \ / _` | '_ ` _ \ / _ \/ __| '_ \ / _ \/ _` | #
# | | | | (_| | | | | | |  __/\__ \ | | |  __/ (_| | # 
# |_| |_|\__,_|_| |_| |_|\___||___/_| |_|\___|\__,_| #
#                                                    #
######################################################

# NOTE: THIS IS NOT THE FINAL CONFIGURATION FILE USERS SHOULD EXPECT TO
# SEE.

# This configuration file defines the configuration of the major
# components that comprise a pipeline of data flowing through nameshed,
# with each linked to and managed by a Central Command, like so:
#
#     +------------+--> Central Command [CC] <-+--------------+
#     |            |             |             |              |
#     v            v             v             v              v
#   Zone      Unsigned Zone    Zone      Signed Zone      Publication
#   Loader -> Review Server -> Signer -> Review Server -> Server
#    [ZL]         [RS]          [ZS]         [RS2]           [PS]
#    ^  ^       |  ^   |                    |  ^  |          |  ^  
#    |  |       v  |   v                    v  |  v          v  |  
#   XFR |      DNS |  HOOK                 DNS | HOOK       DNS |  
#      HTTP       HTTP                        HTTP             HTTP
#
# Most components offer a simple plain text status web interface. These should
# probably be changed to be JSON interfaces with a UI that uses them.
#
# The Zone Loader accepts zones via XFR (and also via disk file, but there is
# not yet any monitoring of the file for changes nor does loading a file cause
# an event to be sent to Central Command like receiving a zone via XFR does)
# then notifies the Central Command.
#
# Central Command then commands the Unsigned Zone Review Server [RS] to make
# the unsigned zone available for review. It serves this zone via its
# configured TCP/UDP port responding to any DNS queries it receives, including
# XFR. Any configured external hook scripts are invoked without waiting for
# them to complete. The hook script is passed the zone name, zone serial and a
# UUID approval token which it can use to request the zone, verify it in some
# way, then approve or reject the zone by sending a HTTP GET request (should
# probably be POST) to the interface and port of the RS component with a
# relative URL of one of the following forms:
#
#   - /rs/${ZONE_NAME}/${ZONE_SERIAL}/approve/${APPROVAL_TOKEN}
#   - /rs/${ZONE_NAME}/${ZONE_SERIAL}/reject/${APPROVAL_TOKEN}
#
# If any hook rejects the zone it will be removed from the pending setnot propagate through the pipeline.
# Note: there is no mechanism yet to purge received unsigned zone (version)s.
#
# If all hooks approve the zone the Central Command will be notified which in
# turn will instruct the Zone Signer [ZS] to sign the zone. It will use the
# signing settings defined in this file and any key files whose name matches
# that of the zone being signed.
#
# When signing is complete ZS will notify Central Command which will instruct
# the Signed Zone Review Server [RS2] to make the zone available for review in
# the same way as for [RS], but on the interface and port configured for
# [RS2], and again like [RS] hooks will be invoked to approve or reject the
# zone but this time the signed version.
#
# Once approved the Central Command will be notified which will then command
# the Publication Server [PS] to serve the signed zone on the public interface
# and port.

log_level = "info"           # "error", "warn", "info", "debug" or "trace"
log_target = "stderr"        # "stderr", "file" or "syslog"
http_listen = ["0.0.0.0:8080"]

units = {}
targets = {}
